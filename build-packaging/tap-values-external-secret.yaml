apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tap-values
  namespace: tap-install
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: SecretStore
    name: azure-secret-store

  target:
    name: tap-values
    creationPolicy: Owner
    template:
      data:
        tap-values.yml: | 
          profile: build
          ceip_policy_disclosed: true

          shared:
            ingress_domain: build.cssa.tapsme.org
            image_registry:  
              project_path: "cxscssa.azurecr.io/tap-build"
              username: "robot$unicorn-robot"
              password: "{{ .tapregistrypassword}}"

          amr:
            observer:
              cloudevent_handler:
                endpoint: "https://amr-cloudevent-handler.view.cssa.tapsme.org"
                liveness_period_seconds: 10
              ca_cert_data: |
                -----BEGIN CERTIFICATE-----
                MIIFIjCCBAqgAwIBAgISA7K1JXfJoPeul1ZqQOSnY9oFMA0GCSqGSIb3DQEBCwUA
                MDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD
                EwJSMzAeFw0yMzExMTQxMzQxMzBaFw0yNDAyMTIxMzQxMjlaMDYxNDAyBgNVBAMT
                K2Ftci1jbG91ZGV2ZW50LWhhbmRsZXIudmlldy5jc3NhLnRhcHNtZS5vcmcwggEi
                MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDQV1pfVrHiLBdf2pub5YUl/r2a
                TWnPJSCW1at9q2tcqprd6ArQFh4op1gwyGyo1OKIwWABnb4Ot/KVphf5X0/90oG8
                J1lG8ILvQ8j2KaVex03JAmxdPKb7dOU2m3qDf95Dimqh770BP8Fntq6GR6BOFM2z
                mFQo3CToCHtVSvKB7+nJFIedAuJEz+Y/7KifKegEQLyDvSbXvxaclzfDz4cnMY7+
                tFXcbd4G0iHDZvUiS9k+3cbN26EBJJUYSiy/+tW5WLzB13tY6TH4G9WbjOv9fS5Z
                xzycci3ioQKyi+wp1YZta9Uh7Fb6t33qIjWHPJTPTc7U0KJCQFhhJLnOXWbJAgMB
                AAGjggIsMIICKDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEG
                CCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFOcdiW6gpBJ0MyYxrZRp
                Lg4z9Z2TMB8GA1UdIwQYMBaAFBQusxe3WFbLrlAJQOYfr52LFMLGMFUGCCsGAQUF
                BwEBBEkwRzAhBggrBgEFBQcwAYYVaHR0cDovL3IzLm8ubGVuY3Iub3JnMCIGCCsG
                AQUFBzAChhZodHRwOi8vcjMuaS5sZW5jci5vcmcvMDYGA1UdEQQvMC2CK2Ftci1j
                bG91ZGV2ZW50LWhhbmRsZXIudmlldy5jc3NhLnRhcHNtZS5vcmcwEwYDVR0gBAww
                CjAIBgZngQwBAgEwggEDBgorBgEEAdZ5AgQCBIH0BIHxAO8AdQA7U3d1Pi25gE6L
                MFsG/kA7Z9hPw/THvQANLXJv4frUFwAAAYvOR8AEAAAEAwBGMEQCIGyLRw9WXBfV
                1No5F8RQutMPATGnxAY+1uU6y7NKuoA3AiAnCAp92dQIi7T+OxtN9tWvpBYjZuk4
                H4/G6bGEUidQOAB2AO7N0GTV2xrOxVy3nbTNE6Iyh0Z8vOzew1FIWUZxH7WbAAAB
                i85Hv/8AAAQDAEcwRQIhAIPmIBHtnKRFWoLCxn9nZML4Qr+u50PM+DG99wmw7xBj
                AiBmiCrBJxtxvUa1Ss/bedbZ3GYUTK6sLVKGtiIUBuFw7zANBgkqhkiG9w0BAQsF
                AAOCAQEAsuV2Bb4/A4AXqjjYRx0GBojAq9g9BOrFraTYVKxuRemU8l0kHSPgSrh/
                Q/uNm/LfZb9GS76nHXDwyesq5YFeYqxmBC8eueOkcN9qW8Z6oqloADwfnTjY7SzG
                L6o1yf1/vqeuNG0u5Z3zl8sRJK3YXQ+8zQeaKzs/G2svGnm+9K1gk8eN64M0h7Ke
                D/XQRnDgztDGNRxAJNP9HdaOkT0vKnnc7uUoCCRgTT1sQrhIWLhBvKEaNUr66QwT
                EDl3DW4P6MvOkA7fZWTrtazf87luQdh/X1eQXxyYoVqQWwKzOai5zWR4GJJufoxw
                ODOBQWifI7QSmRyMWRUUWh0MO+lItQ==
                -----END CERTIFICATE-----
                -----BEGIN CERTIFICATE-----
                MIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw
                TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
                cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw
                WhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg
                RW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
                AoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP
                R5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx
                sxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm
                NHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg
                Z3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG
                /kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC
                AYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB
                Af8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA
                FHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw
                AoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw
                Oi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB
                gt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W
                PTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl
                ikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz
                CkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm
                lJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4
                avAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2
                yJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O
                yK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids
                hCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+
                HlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv
                MldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX
                nLRbwHOoq7hHwg==
                -----END CERTIFICATE-----
                -----BEGIN CERTIFICATE-----
                MIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/
                MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT
                DkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow
                TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
                cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB
                AQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC
                ov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL
                wYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D
                LtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK
                4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5
                bHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y
                sR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ
                Xmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4
                FQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc
                SLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql
                PRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND
                TwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw
                SwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1
                c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx
                +tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB
                ATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu
                b3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E
                U1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu
                MA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC
                5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW
                9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG
                WCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O
                he8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC
                Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5
                -----END CERTIFICATE-----
                    
          contour:
            envoy:
              service:
                type: ClusterIP

          supply_chain: "testing_scanning"

          ootb_supply_chain_basic:
            gitops:
              ssh_secret: "tenant-gitops-ssh"
              server_address: "ssh://git@github.com"
              repository_owner: "Mpluya"
              repository_name: "tap-azure-workload-config-repo"
              branch: main

          ootb_supply_chain_testing:
            gitops:
              ssh_secret: "tenant-gitops-ssh"
              server_address: "ssh://git@github.com"
              repository_owner: "Mpluya"
              repository_name: "tap-azure-workload-config-repo"
              branch: main

          ootb_supply_chain_testing_scanning:
            gitops:
              ssh_secret: "tenant-gitops-ssh"
              server_address: "ssh://git@github.com"
              repository_owner: "Mpluya"
              repository_name: "tap-azure-workload-config-repo"
              branch: main

          ootb_templates:
            carvel_package:
              parameters:
              - selector:
                  matchLabels:
                    apps.tanzu.vmware.com/workload-type: server
                schema: |
                  #@data/values-schema
                  ---
                  #@schema/title "Workload name"
                  #@schema/desc "Required. Name of the workload, used by K8s Ingress HTTP rules."
                  #@schema/example "tanzu-java-web-app"
                  #@schema/validation min_len=1
                  workload_name: ""

                  #@schema/title "Replicas"
                  #@schema/desc "Number of replicas."
                  replicas: 1

                  #@schema/title "Port"
                  #@schema/desc "Port number for the backend associated with K8s Ingress."
                  port: 8080

                  #@schema/title "Hostname"
                  #@schema/desc "If set, K8s Ingress will be created with HTTP rules for hostname."
                  #@schema/example "app.tanzu.vmware.com"
                  hostname: ""

                  #@schema/title "Cluster Issuer"
                  #@schema/desc "CertManager Issuer to use to generate certificate for K8s Ingress."
                  cluster_issuer: "letsencrypt-production"
                overlays: |
                  #@ load("@ytt:overlay", "overlay")
                  #@ load("@ytt:data", "data")
                  #@overlay/match by=overlay.subset({"apiVersion":"apps/v1", "kind": "Deployment"})
                  ---
                  spec:
                    #@overlay/match missing_ok=True
                    replicas: #@ data.values.replicas

                  #@ if data.values.hostname != "":
                  ---
                  apiVersion: networking.k8s.io/v1
                  kind: Ingress
                  metadata:
                    name: #@ data.values.workload_name
                    annotations:
                      cert-manager.io/cluster-issuer:  #@ data.values.cluster_issuer
                      ingress.kubernetes.io/force-ssl-redirect: "true"
                      kubernetes.io/ingress.class: contour
                      kapp.k14s.io/change-rule: "upsert after upserting Services"
                    labels:
                      app.kubernetes.io/component: "run"
                      carto.run/workload-name:  #@ data.values.workload_name
                  spec:
                    tls:
                      - secretName: #@ data.values.workload_name
                        hosts:
                        - #@ data.values.hostname
                    rules:
                    - host: #@ data.values.hostname
                      http:
                        paths:
                        - pathType: Prefix
                          path: /
                          backend:
                            service:
                              name: #@ data.values.workload_name
                              port:
                                number: #@ data.values.port
                  #@ end              
              - selector:
                  matchLabels:
                    apps.tanzu.vmware.com/workload-type: web
                schema: |
                  #@data/values-schema
                  ---
                  #@schema/validation min_len=1
                  workload_name: ""
                overlays: ""
              - selector:
                  matchLabels:
                    apps.tanzu.vmware.com/workload-type: worker
                schema: |
                  #@data/values-schema
                  ---
                  #@schema/validation min_len=1
                  workload_name: ""
                  replicas: 1
                overlays: |
                  #@ load("@ytt:overlay", "overlay")
                  #@ load("@ytt:data", "data")
                  #@overlay/match by=overlay.subset({"apiVersion":"apps/v1", "kind": "Deployment"})
                  ---
                  spec:
                    #@overlay/match missing_ok=True
                    replicas: #@ data.values.replicas

          grype:
            namespace: dev
            targetImagePullSecret: "registries-credentials"
            metadataStore:
              url: "https://metadata-store.view.cssa.tapsme.org"
              caSecret:
                name: store-ca-cert
                importFromNamespace: metadata-store-secrets
              authSecret:
                name: store-auth-token
                importFromNamespace: metadata-store-secrets

          namespace_provisioner:
            controller: false
            additional_sources:
            - git:
                url: ssh://git@github.com/Mpluya/tap-namespaces-azure
                ref: origin/main
                subPath: additional-resources
                secretRef:
                  name: tap-install-gitops-ssh-too
                  namespace: tap-install
                  create_export: true
              path: _ytt_lib/custom-resources-generic
            - git:
                url: ssh://git@github.com/Mpluya/tap-namespaces-azure
                ref: origin/main
                subPath: additional-resources-build
                secretRef:
                  name: tap-install-gitops-ssh-also
                  namespace: tap-install
                  create_export: true
              path: _ytt_lib/custom-resources-build              
            gitops_install:
              ref: origin/main
              subPath: ns
              url: ssh://git@github.com/Mpluya/tap-namespaces-azure
              secretRef:
                name: tap-install-gitops-ssh
                namespace: tap-install
            overlay_secrets:
            - name: workload-git-ssh-overlay
              namespace: tap-install
              create_export: true    

          package_overlays:
          - name: "ootb-supply-chain-testing-scanning"
            secrets: 
            - name: "ootb-supply-chain-overlay"
          - name: "ootb-templates"
            secrets: 
            - name: "ootb-template-overlay"
          
  data:
  - secretKey: tapregistrypassword
    remoteRef:
      key: tapregistrypassword
