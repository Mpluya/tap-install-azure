apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tap-values
  namespace: tap-install
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: SecretStore
    name: azure-secret-store

  target:
    name: tap-values
    creationPolicy: Owner
    template:
      data:
        tap-values.yml: | 
          profile: view
          ceip_policy_disclosed: true

          shared:
            ingress_domain: view.cssa.tapsme.org
            ingress_issuer: letsencrypt-production

          contour:
            infrastructure_provider: azure
            envoy:
              service:
                type: LoadBalancer

          tap_gui:
            metadataStoreAutoconfiguration: true
            service_type: ClusterIP
            deployment:
              replicas: 3
            app_config:
              opencost:
                baseUrl: https://tap-gui.view.cssa.tapsme.org/api/proxy/opencost
              proxy:
                '/opencost':
                  target: http://opencost.opencost.svc.cluster.local:9003
                  changeOrigin: true
                  pathRewrite:
                    ^/api/proxy/opencost: /
              customize:
                features:
                  supplyChain:
                    enableTriageUI: true
              organization:
                name: "CSSA Team"
              catalog:
                locations:
                  - type: url
                    target: https://github.com/maelarge/tap-catalog/blob/main/catalog-info.yaml
              # backend:
              #   database:
              #     client: pg
              #     pluginDivisionMode: schema
              #     connection:
              #       database: "{{ .tapGuiDbName }}" 
              #       host: "{{ .tapGuiPostgresHost }}"
              #       port: 5432
              #       user: "{{ .tapGuiPostgresUser }}"
              #       password: "{{ .tapGuiPostgresPassword }}"
                    # ssl: {rejectUnauthorized: true} # Set to true if using SSL
              techdocs:
                builder: 'external'
                publisher:
                  type: 'azureBlobStorage'
                  azureBlobStorage:
                    containerName: 'pensketechdocs'
                    credentials:
                      accountName: 'tapsmeekstechdocs'
                      accountKey: {{ .techdocsaccountkey }}
              auth:
                environment: development
                providers:
                  github:
                    development:
                      clientId: 08cfa793c9fc0417343b
                      clientSecret: {{ .githubclientsecret }}

              integrations:
                github:
                  - host: github.com
                    token: {{ .githubtoken }}

              kubernetes:
                serviceLocatorMethod:
                  type: 'multiTenant'
                clusterLocatorMethods:
                  - type: 'config'
                    clusters:
                      - url: https://tap-build-cssa-resource-gr-489753-glslc8e3.hcp.westus.azmk8s.io
                        name: build
                        authProvider: serviceAccount
                        serviceAccountToken: {{ .tapguiviewerbuildsatoken }}
                        skipTLSVerify: true
                        skipMetricsLookup: false
                      - url: https://tap-run-cssa-resource-gr-489753-o2ybr5rh.hcp.westus.azmk8s.io:443
                        name: run
                        authProvider: serviceAccount
                        serviceAccountToken: {{ .tapguiviewerrunsatoken }}
                        skipTLSVerify: true
                        skipMetricsLookup: false
                      - url: https://tap-run-pr-cssa-resource-gr-489753-fe6i0un7.hcp.westus.azmk8s.io:443
                        name: run-prod
                        authProvider: serviceAccount
                        serviceAccountToken: {{ .tapguiviewerrunprodsatoken }}
                        skipTLSVerify: true
                        skipMetricsLookup: false

          appliveview:
            ingressEnabled: true
            ingress_issuer: letsencrypt-production

          accelerator:
            ingress:
              include: true

          metadata_store:
            ingress_enabled: "true"
            app_service_type: "ClusterIP"
            ns_for_export_app_cert: "*"
            deploy_internal_db: "false"
            db_host: "{{ .metadataStoreDbHost  }}"
            db_user: "{{ .metadataStoreDbUser  }}"
            db_password: "{{ .metadataStoreDbUserPassword  }}"
            db_name: "{{ .metadataStoreDbName  }}"
            db_port: "5432"
            db_sslmode: "prefer"
            db_ca_certificate: | 
              -----BEGIN CERTIFICATE-----
              MIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh
              MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
              d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD
              QTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT
              MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j
              b20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG
              9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB
              CSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97
              nh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt
              43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P
              T19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4
              gdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO
              BgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR
              TLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw
              DQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr
              hMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg
              06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF
              PnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls
              YSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk
              CAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=
              -----END CERTIFICATE-----
          
          package_overlays:
          - name: tap-gui
            secrets:
            - name: tdp-app-image-overlay-secret

  data:
  - secretKey: githubclientsecret
    remoteRef:
      key: githubclientsecret
  - secretKey: githubtoken
    remoteRef:
      key: githubtoken
  - secretKey: tapguiviewerbuildsatoken
    remoteRef:
      key: tapguiviewerbuildsatoken
  - secretKey: tapguiviewerrunsatoken
    remoteRef:
      key: tapguiviewerrunsatoken
  - secretKey: tapguiviewerrunprodsatoken
    remoteRef:
      key: tapguiviewerrunprodsatoken
  - secretKey: techdocsaccountkey
    remoteRef:
      key: techdocsaccountkey
  - secretKey: tapguipostgresspassword
    remoteRef:
      key: tapguipostgresspassword
  - secretKey: metadataStoreDbHost
    remoteRef:
      key: metadataStoreDbHost
  - secretKey: metadataStoreDbUser
    remoteRef:
      key: metadataStoreDbUser
  - secretKey: metadataStoreDbUserPassword
    remoteRef:
      key: metadataStoreDbUserPassword
  - secretKey: metadataStoreDbName
    remoteRef:
      key: metadataStoreDbName
  - secretKey: tapGuiPostgresPassword
    remoteRef:
      key: tapGuiPostgresPassword
  - secretKey: tapGuiPostgresUser
    remoteRef:
      key: tapGuiPostgresUser     
  - secretKey: tapGuiPostgresHost
    remoteRef:
      key: tapGuiPostgresHost
  - secretKey: tapGuiDbName
    remoteRef:
      key: tapGuiDbName     